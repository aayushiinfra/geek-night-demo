name: Snap_Build_Run_Dev
on:
  workflow_dispatch:
  issue_comment:
    types: [created]
  pull_request:
    branches: ["main"]

jobs:

  build_snap:
    runs-on: self-hosted
    steps:
      - name: Checkout Repo Code
        uses: actions/checkout@v3

      # - name: Do a cleanup
      #   if: github.event.issue.pull_request && contains(github.event.comment.body,'/clean')
      #   run: |
      #     export SNAPCRAFT_BUILD_ENVIRONMENT=lxd
      #     snapcraft clean
      #   shell: bash

      - name: Build Snap
        run: |
          export SNAPCRAFT_BUILD_ENVIRONMENT=lxd
          snapcraft
          ls
        shell: bash
        working-directory: ros-listener-talker/snap

  get_pr_no:
    if: github.event.issue.pull_request && contains(github.event.comment.body,'/deploy')
    runs-on: self-hosted
    outputs:
      PR_NUMBER: ${{ steps.pr.outputs.result }}
      SHA: ${{ steps.sha.outputs.result }}
    steps:

      - name: Get PR sha
        id: sha
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha

      - name: Get PR num
        id: pr
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.number

      - name: Checkout Repo Code
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.sha.outputs.result}}

      - name: Build Snap
        run: |
          export SNAPCRAFT_BUILD_ENVIRONMENT=lxd
          snapcraft
          ls
        shell: bash
        working-directory: ros-listener-talker/snap

  deploy:
    needs: get_pr_no
    runs-on: self-hosted
    steps:

      - name: Install the snap
        run: |
          echo "${{ secrets.APP_PW }}" | sudo -S snap install --devmode ros-talker-listener*.snap 2>/dev/null || echo "Snap is installed"
          # isSnapPresent=$(snap list | awk '{print $1}' | grep "app")
          # if [ "$isSnapPresent" = "ros-talker-listener" ];
          # then
          #   echo "All good"
          # else
          #   echo "Snap not installed"
          #   exit 1
          # fi
        shell: bash
        working-directory: ros-listener-talker/snap

      - name: Run the snap app
        run: |
          screen -h 1000 -dmSL roslistener ros-talker-listener
          sleep 5
        shell: bash
        working-directory: ros-listener-talker/snap

      - name: Kill the app run
        run: |
          killall screen
        shell: bash
        working-directory: ros-listener-talker/snap

      - name: Verification
        run: |
          cat screenlog.0
        shell: bash
        working-directory: ros-listener-talker/snap

      - name: Clear the output file
        run: |
          rm screenlog.0
          echo "${{ secrets.APP_PW }}" | sudo -S snap remove ros-talker-listener*.snap
        shell: bash
        working-directory: ros-listener-talker/snap

      - name: Construct comment
        uses: actions/github-script@v7
        id: comment
        if: always()
        with:
          result-encoding: string
          script: |
            const name = 'Deployed on Runner';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}`;
            return body

      - name: Update comment
        uses: peter-evans/create-or-update-comment@v4
        if: success() || failure()
        with:
          comment-id: ${{github.event.comment.id}}
          issue_number: ${{ needs.get-pr-no.outputs.PR_NUMBER }}
          body: |
            ${{ steps.comment.outputs.result}}
            'Check logs at ${{github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id}}'
          edit-mode: replace

